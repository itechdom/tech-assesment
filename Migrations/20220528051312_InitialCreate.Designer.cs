// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using justice_technical_assestment.Infrastructure.Data;

#nullable disable

namespace justice_technical_assestment.Migrations
{
    [DbContext(typeof(ClinicContext))]
    [Migration("20220528051312_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("justice_technical_assestment.Infrastructure.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Initialis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doctor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Initialis = "o.s.",
                            MobileNumber = "+966501987111",
                            surname = "Almali"
                        });
                });

            modelBuilder.Entity("justice_technical_assestment.Infrastructure.Models.Kin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLineFour")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLineOne")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLineThree")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLineTwo")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Relation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Kin", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLineFour = "Address test 4",
                            AddressLineOne = "Address test 1",
                            AddressLineThree = "Address test 3",
                            AddressLineTwo = "Address test two",
                            FirstName = "Mohammed",
                            LastName = "Ali",
                            PostalCode = "123321",
                            Relation = 2
                        });
                });

            modelBuilder.Entity("justice_technical_assestment.Infrastructure.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KinId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("KinId");

                    b.ToTable("Patient", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1989, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Osama",
                            Gender = 0,
                            LastName = "Alghanmi",
                            MobileNumber = "0501977200",
                            PassNo = "XYZ190222"
                        });
                });

            modelBuilder.Entity("justice_technical_assestment.Infrastructure.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("justice_technical_assestment.Infrastructure.Models.Patient", b =>
                {
                    b.HasOne("justice_technical_assestment.Infrastructure.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("justice_technical_assestment.Infrastructure.Models.Kin", "Kin")
                        .WithMany()
                        .HasForeignKey("KinId");

                    b.Navigation("Doctor");

                    b.Navigation("Kin");
                });
#pragma warning restore 612, 618
        }
    }
}
