using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using justice_technical_assestment.Infrastructure.Models;

namespace justice_technical_assestment.Infrastructure.Repositories
{
    public class JWTManagerRepository : IJWTManagerRepository
    {
        Dictionary<string, string> UsersRecords = new Dictionary<string, string>
    {
        //this is a test repository
        { "test","test"},
    };

        private readonly IConfiguration iconfiguration;
        public JWTManagerRepository(IConfiguration iconfiguration)
        {
            this.iconfiguration = iconfiguration;
        }
        public Tokens Authenticate(User user)
        {
            //     if (!UsersRecords.Any(x => x.Key == user.Username && x.Value == user.Password))
            //     {
            //         return null;
            //     }

            //     // Else we generate JSON Web Token
            //     var tokenHandler = new JwtSecurityTokenHandler();
            //     var tokenKey = Encoding.UTF8.GetBytes(iconfiguration["JWT:Key"]);
            //     var tokenDescriptor = new SecurityTokenDescriptor
            //     {
            //         Subject = new ClaimsIdentity(new Claim[]
            //       {
            //      new Claim(ClaimTypes.Name, users.Name)
            //       }),
            //         Expires = DateTime.UtcNow.AddMinutes(10),
            //         SigningCredentials = new SigningCredentials(new SymmetricSecurityKey(tokenKey), SecurityAlgorithms.HmacSha256Signature)
            //     };
            //     var token = tokenHandler.CreateToken(tokenDescriptor);
            //     return new Tokens { Token = tokenHandler.WriteToken(token) };

            return new Tokens();
        }
    }
}